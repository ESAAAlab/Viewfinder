#include <TVout.h>
#include <avr/pgmspace.h>
#include <font8x8.h>

TVout TV;

PROGMEM const unsigned char ORDI[] = {
48, 27,
0x00,0x00,0x00,0x01,0x00,0x00,
0x00,0x00,0x00,0x03,0x00,0x00,
0x00,0x30,0x00,0x03,0x10,0x00,
0x00,0xA0,0x00,0x02,0x30,0x00,
0x01,0xA0,0x00,0x06,0x00,0x00,
0x02,0x80,0x00,0x14,0x60,0x00,
0x02,0x80,0x10,0x3C,0x61,0xC0,
0x02,0x81,0x3E,0x6C,0xC6,0x00,
0x06,0x87,0xBC,0xC8,0x80,0x00,
0x04,0x87,0xA4,0x99,0x90,0x00,
0x05,0x0D,0xED,0xBB,0xE0,0x00,
0x07,0x09,0xCA,0xEE,0x40,0x00,
0x06,0x09,0x8C,0x44,0x00,0x00,
0x04,0x0F,0x00,0x00,0x00,0x00,
0x04,0x86,0x00,0x40,0x00,0x20,
0x07,0x00,0x00,0xC0,0x03,0x7C,
0x07,0x00,0x00,0xC3,0x32,0x78,
0x00,0x00,0x03,0xE5,0x26,0x48,
0x00,0x00,0x73,0x8A,0x6C,0x52,
0x00,0x08,0xF1,0x9A,0x5C,0x94,
0x00,0x59,0xB1,0x9C,0xD7,0x18,
0x00,0xBB,0x33,0x31,0x66,0x00,
0x01,0xB2,0x67,0x5E,0x00,0x00,
0x19,0x56,0xFB,0xCC,0x00,0x00,
0x61,0xBB,0xB3,0x80,0x00,0x00,
0x01,0xB9,0x20,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00};


PROGMEM const unsigned char MAC[] = {
24, 30,
0x3F,0xFF,0xF8,
0x40,0x00,0x04,
0x80,0x00,0x02,
0x8F,0xFF,0xE2,
0x90,0x00,0x12,
0x90,0x00,0x12,
0x90,0x00,0x12,
0x91,0x12,0x12,
0x91,0x12,0x12,
0x90,0x10,0x12,
0x90,0x30,0x12,
0x90,0x00,0x12,
0x90,0x84,0x12,
0x90,0x78,0x12,
0x90,0x00,0x12,
0x90,0x00,0x12,
0x8F,0xFF,0xE2,
0x80,0x00,0x02,
0x80,0x00,0x02,
0x80,0x00,0x02,
0x80,0x07,0xE2,
0x98,0x00,0x02,
0x80,0x00,0x02,
0x80,0x00,0x02,
0x80,0x00,0x02,
0x7F,0xFF,0xFC,
0x40,0x00,0x04,
0x40,0x00,0x04,
0x40,0x00,0x04,
0x7F,0xFF,0xFC};

// width: 56 height: 56
PROGMEM const unsigned char ESACM[] = {
56, 56,
0x00, 0x00, 0x03, 0xff, 0x80, 0x00, 0x00, 
0x00, 0x00, 0x1f, 0xff, 0xf8, 0x00, 0x00, 
0x00, 0x00, 0xfe, 0x00, 0xfe, 0x00, 0x00, 
0x00, 0x03, 0xe0, 0x00, 0x0f, 0x80, 0x00, 
0x00, 0x0f, 0x80, 0x00, 0x01, 0xe0, 0x00, 
0x00, 0x1e, 0x00, 0x00, 0x00, 0x78, 0x00, 
0x00, 0x38, 0x00, 0x00, 0x00, 0x3c, 0x00, 
0x00, 0x70, 0x00, 0x0c, 0x00, 0x0e, 0x00, 
0x00, 0xe0, 0x00, 0x3f, 0x00, 0x07, 0x00, 
0x01, 0xc0, 0x00, 0x3f, 0x80, 0x03, 0x80, 
0x03, 0x80, 0x00, 0x73, 0x80, 0x01, 0xc0, 
0x07, 0x00, 0x00, 0x70, 0x00, 0x00, 0xe0, 
0x0e, 0x07, 0xf8, 0x70, 0x00, 0x00, 0x60, 
0x0c, 0x07, 0xf8, 0x3e, 0x00, 0x00, 0x70, 
0x1c, 0x07, 0xf8, 0x1f, 0x00, 0x00, 0x30, 
0x18, 0x07, 0x00, 0x03, 0x80, 0x00, 0x18, 
0x38, 0x07, 0x00, 0x03, 0x80, 0x00, 0x18, 
0x30, 0x07, 0xf0, 0x73, 0x84, 0x00, 0x0c, 
0x70, 0x07, 0xf0, 0x7f, 0x04, 0x00, 0x0c, 
0x60, 0x07, 0xf0, 0x3f, 0x0e, 0x00, 0x0e, 
0x60, 0x07, 0x00, 0x0c, 0x0e, 0x00, 0x06, 
0xe0, 0x07, 0x00, 0x00, 0x1f, 0x00, 0x06, 
0xc0, 0x07, 0xf8, 0x00, 0x1f, 0x00, 0x06, 
0xc0, 0x07, 0xf8, 0x00, 0x3f, 0x80, 0x07, 
0xc0, 0x07, 0xf8, 0x00, 0x3b, 0x80, 0x03, 
0xc0, 0x00, 0x00, 0x00, 0x71, 0xc0, 0x03, 
0xc0, 0x00, 0x00, 0x00, 0x71, 0xc0, 0x03, 
0xc0, 0x00, 0x38, 0x00, 0xff, 0xe0, 0x03, 
0xc0, 0x00, 0xf8, 0x00, 0xff, 0xe0, 0x03, 
0xc0, 0x01, 0xf8, 0x00, 0xff, 0xe0, 0x03, 
0xc0, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x03, 
0xc0, 0x03, 0x80, 0x00, 0x00, 0x00, 0x03, 
0xc0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x07, 
0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x06, 
0xe0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x06, 
0x60, 0x03, 0x80, 0xc0, 0x30, 0x00, 0x06, 
0x60, 0x03, 0xc0, 0xe0, 0x70, 0x00, 0x0e, 
0x70, 0x01, 0xf8, 0xf0, 0xf0, 0x00, 0x0c, 
0x30, 0x00, 0xf8, 0xf9, 0xf0, 0x00, 0x0c, 
0x38, 0x00, 0x78, 0xff, 0xf0, 0x00, 0x18, 
0x18, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x18, 
0x1c, 0x00, 0x00, 0xef, 0x70, 0x00, 0x30, 
0x0c, 0x00, 0x00, 0xe6, 0x70, 0x00, 0x70, 
0x0e, 0x00, 0x00, 0xe0, 0x70, 0x00, 0x60, 
0x07, 0x00, 0x00, 0xe0, 0x70, 0x00, 0xe0, 
0x03, 0x80, 0x00, 0xe0, 0x70, 0x01, 0xc0, 
0x01, 0xc0, 0x00, 0xe0, 0x70, 0x03, 0x80, 
0x00, 0xe0, 0x00, 0xe0, 0x70, 0x07, 0x00, 
0x00, 0x70, 0x00, 0x00, 0x00, 0x0e, 0x00, 
0x00, 0x38, 0x00, 0x00, 0x00, 0x3c, 0x00, 
0x00, 0x1e, 0x00, 0x00, 0x00, 0x78, 0x00, 
0x00, 0x0f, 0x80, 0x00, 0x01, 0xe0, 0x00, 
0x00, 0x03, 0xe0, 0x00, 0x0f, 0x80, 0x00, 
0x00, 0x00, 0xfe, 0x00, 0xff, 0x00, 0x00, 
0x00, 0x00, 0x1f, 0xff, 0xf8, 0x00, 0x00, 
0x00, 0x00, 0x03, 0xff, 0x80, 0x00, 0x00

};

void setup()
{
  TV.begin(PAL,88,70);
  TV.select_font(font8x8);
}

void loop()
{
  mac();
  intro();
  esacm();  
}

void intro() {
  for (int i = 0;i<20;i++) {
    TV.clear_screen();
    TV.set_cursor(40,35);
    TV.print("FETE");
    TV.delay(max(30,600-50*i));
    TV.clear_screen();
    TV.set_cursor(48,35);
    TV.print("DE");
    TV.delay(max(20,500-50*i));
    TV.clear_screen();
    TV.bitmap(36,20,ORDI);
    TV.delay(max(40,800-50*i));
  }
  TV.clear_screen();
  TV.bitmap(36,20,ORDI);
  TV.delay(2500);
}

void mac_blink() {
  //TV.draw_line(50,28,53,28,INVERT);
  TV.draw_line(57,28,60,28,INVERT);
  TV.set_pixel(52,32,INVERT);
  TV.set_pixel(58,31,INVERT);
  TV.delay(250);
  //TV.draw_line(50,28,53,28,INVERT);
  TV.set_pixel(58,31,INVERT);
  TV.set_pixel(52,32,INVERT);
  TV.draw_line(57,28,60,28,INVERT);
  //TV.delay(120);
}

void mac() {
  TV.clear_screen();
  TV.bitmap(44,20,MAC);
  TV.delay(2500);
  TV.clear_screen();
  TV.set_cursor(40,35);
  TV.print("HEY!");
  TV.delay(500);
  TV.clear_screen();
  TV.bitmap(44,20,MAC);
  TV.delay(1800);
  TV.clear_screen();
  TV.set_cursor(40,35);
  TV.print("PSST");
  TV.delay(500);
  TV.clear_screen();
  TV.bitmap(44,20,MAC);
  TV.delay(1800);
  mac_blink();
  TV.delay(1200);
  TV.clear_screen();
}

void esacm() {
  TV.clear_screen();
unsigned char w,l,wb;
  int index;
  w = pgm_read_byte(ESACM);
  l = pgm_read_byte(ESACM+1);
  if (w&7)
    wb = w/8 + 1;
  else
    wb = w/8;
  index = wb*(l-1) + 2;
  for ( unsigned char i = 1; i < l; i++ ) {
    TV.bitmap(30,0,ESACM,index,w,i);
    index-= wb;
    TV.delay(50);
  }
  for (unsigned char i = 0; i < (TV.vres() - l)/2; i++) {
    TV.bitmap(30,i,ESACM);
    TV.delay(50);
  }
  TV.delay(4000);
  TV.clear_screen();
}
